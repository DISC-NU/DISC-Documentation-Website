"use strict";(self.webpackChunkdisc_documentation=self.webpackChunkdisc_documentation||[]).push([[5778],{5826:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"frontend/contributing","title":"Contributing Guide","description":"This guide will help you contribute to the frontend project effectively.","source":"@site/docs/discover-program-template-project/frontend/contributing.md","sourceDirName":"frontend","slug":"/frontend/contributing","permalink":"/discover-program-template-project/frontend/contributing","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"contributing","title":"Contributing Guide","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Deployment","permalink":"/discover-program-template-project/frontend/deployment"}}');var l=i(4848),r=i(8453);const t={id:"contributing",title:"Contributing Guide",sidebar_position:6},o="Contributing",d={},c=[{value:"Getting Started",id:"getting-started",level:2},{value:"Development Process",id:"development-process",level:2},{value:"Branch Protection Rules",id:"branch-protection-rules",level:2},{value:"Code Owners",id:"code-owners",level:2},{value:"Coding Standards",id:"coding-standards",level:2},{value:"File Organization",id:"file-organization",level:3},{value:"Component Guidelines",id:"component-guidelines",level:3},{value:"Code Style",id:"code-style",level:3},{value:"Pull Request Guidelines",id:"pull-request-guidelines",level:2},{value:"PR Title Format",id:"pr-title-format",level:3},{value:"PR Description",id:"pr-description",level:3},{value:"Review Process",id:"review-process",level:3},{value:"Common Issues",id:"common-issues",level:2},{value:"Getting Help",id:"getting-help",level:2},{value:"Additional Resources",id:"additional-resources",level:2},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"contributing",children:"Contributing"})}),"\n",(0,l.jsx)(n.p,{children:"This guide will help you contribute to the frontend project effectively."}),"\n",(0,l.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Fork the repository on GitHub"}),"\n",(0,l.jsx)(n.li,{children:"Clone your fork:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/your-username/disc-website.git\ncd disc-website\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"3",children:["\n",(0,l.jsx)(n.li,{children:"Install dependencies:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"npm install\n"})}),"\n",(0,l.jsx)(n.h2,{id:"development-process",children:"Development Process"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Create a new branch:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"git checkout -b feature/your-feature-name\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Make your changes following our ",(0,l.jsx)(n.a,{href:"#coding-standards",children:"coding standards"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Test and lint your changes:"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"npm test\nnpm run lint\nnpm run format:check\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"4",children:["\n",(0,l.jsx)(n.li,{children:"Submit a pull request"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"branch-protection-rules",children:"Branch Protection Rules"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"main"})," branch is protected with the following rules:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"All PRs must be reviewed by at least one code owner"}),"\n",(0,l.jsx)(n.li,{children:"All CI/CD checks must pass before merging"}),"\n",(0,l.jsxs)(n.li,{children:["Direct pushes to ",(0,l.jsx)(n.code,{children:"main"})," are not allowed"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"code-owners",children:"Code Owners"}),"\n",(0,l.jsx)(n.p,{children:"The following maintainers are responsible for reviewing changes:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Default owners for all files\n* @ethanpaneraa @amyzliao @aanandp123\n"})}),"\n",(0,l.jsx)(n.p,{children:"All pull requests must be approved by at least one code owner before merging."}),"\n",(0,l.jsx)(n.h2,{id:"coding-standards",children:"Coding Standards"}),"\n",(0,l.jsx)(n.h3,{id:"file-organization",children:"File Organization"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Place new components in appropriate directories under ",(0,l.jsx)(n.code,{children:"src/"})]}),"\n",(0,l.jsx)(n.li,{children:"Keep files focused and single-purpose"}),"\n",(0,l.jsx)(n.li,{children:"Follow the established project structure"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"component-guidelines",children:"Component Guidelines"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Use ",(0,l.jsx)(n.code,{children:".jsx"})," extension for files containing JSX"]}),"\n",(0,l.jsx)(n.li,{children:"Define PropTypes for all props"}),"\n",(0,l.jsx)(n.li,{children:"Keep components modular and reusable"}),"\n",(0,l.jsx)(n.li,{children:"Write meaningful comments for complex logic"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"code-style",children:"Code Style"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Follow ESLint and Prettier configurations"}),"\n",(0,l.jsxs)(n.li,{children:["Use proper import ordering:","\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"React imports"}),"\n",(0,l.jsx)(n.li,{children:"Third-party modules"}),"\n",(0,l.jsxs)(n.li,{children:["Absolute paths from ",(0,l.jsx)(n.code,{children:"src/"})]}),"\n",(0,l.jsx)(n.li,{children:"Relative paths"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Use meaningful variable and function names"}),"\n",(0,l.jsx)(n.li,{children:"Write clear, concise comments"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"pull-request-guidelines",children:"Pull Request Guidelines"}),"\n",(0,l.jsx)(n.h3,{id:"pr-title-format",children:"PR Title Format"}),"\n",(0,l.jsx)(n.p,{children:"Use clear, descriptive titles that explain the change:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"feat: add user profile component\nfix: resolve navigation bug\ndocs: update installation guide\nstyle: improve button styling\n"})}),"\n",(0,l.jsx)(n.h3,{id:"pr-description",children:"PR Description"}),"\n",(0,l.jsx)(n.p,{children:"The repository includes a PR template that will automatically populate when you create a new PR. The template helps ensure all necessary information is included:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-markdown",children:"# Pull Request Template\n\n## Type of change\n\n- [ ] Bug fix\n- [ ] New feature\n- [ ] Breaking change\n- [ ] Documentation update\n\n## Checklist:\n\n- [ ] My code follows the style guidelines of this project\n- [ ] I have performed a self-review of my own code\n- [ ] I have commented my code, particularly in hard-to-understand areas\n- [ ] My changes generate no new warnings\n- [ ] I have added tests that prove my fix is effective or that my feature works\n- [ ] Any dependent changes have been merged and published\n"})}),"\n",(0,l.jsx)(n.p,{children:"Fill out all sections of the template to help reviewers understand and evaluate your changes effectively."}),"\n",(0,l.jsx)(n.h3,{id:"review-process",children:"Review Process"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Submit your PR"}),"\n",(0,l.jsx)(n.li,{children:"Wait for CI checks to complete"}),"\n",(0,l.jsx)(n.li,{children:"Address any automated feedback"}),"\n",(0,l.jsx)(n.li,{children:"Request review from code owners"}),"\n",(0,l.jsx)(n.li,{children:"Address review feedback"}),"\n",(0,l.jsx)(n.li,{children:"Wait for approval and merge"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"common-issues",children:"Common Issues"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Failed CI Checks"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Run linting locally before pushing"}),"\n",(0,l.jsx)(n.li,{children:"Check file extensions match content"}),"\n",(0,l.jsx)(n.li,{children:"Verify import order"}),"\n",(0,l.jsx)(n.li,{children:"Ensure all tests pass"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Code Style"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Run Prettier before committing"}),"\n",(0,l.jsx)(n.li,{children:"Follow ESLint rules"}),"\n",(0,l.jsx)(n.li,{children:"Use consistent naming conventions"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Missing Documentation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Update relevant docs"}),"\n",(0,l.jsx)(n.li,{children:"Include inline comments"}),"\n",(0,l.jsx)(n.li,{children:"Add PropTypes definitions"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Join our ",(0,l.jsx)(n.a,{href:"https://discord.gg/mqRQ7s9CyS",children:"Discord"})]}),"\n",(0,l.jsxs)(n.li,{children:["Check existing ",(0,l.jsx)(n.a,{href:"https://github.com/DISC-NU/disc-website/issues",children:"issues"})]}),"\n",(0,l.jsx)(n.li,{children:"Ask questions in your pull request"}),"\n",(0,l.jsx)(n.li,{children:"Reach out to code owners for guidance"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/discover-program-template-project/frontend/project-structure",children:"Project Structure"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/discover-program-template-project/frontend/development",children:"Development Guide"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://reactjs.org/",children:"React Documentation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://eslint.org/",children:"ESLint Documentation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://prettier.io/",children:"Prettier Documentation"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,l.jsx)(n.p,{children:"After your first contribution:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Review our ",(0,l.jsx)(n.a,{href:"/discover-program-template-project/frontend/deployment",children:"Deployment Guide"})]}),"\n",(0,l.jsx)(n.li,{children:"Check out open issues for more ways to help"}),"\n",(0,l.jsx)(n.li,{children:"Help review other PRs"}),"\n",(0,l.jsx)(n.li,{children:"Share feedback for improvement"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(6540);const l={},r=s.createContext(l);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);